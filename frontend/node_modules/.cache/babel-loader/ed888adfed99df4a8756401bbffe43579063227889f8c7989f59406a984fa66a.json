{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\ProPenalty\\\\frontend\\\\src\\\\components\\\\UserInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Container, Grid, Typography, TextField, Button, Box, MenuItem, FormControl, Select, InputLabel, Card, CardContent, RadioGroup, FormControlLabel, Radio } from '@mui/material';\n\n// Mapping state abbreviations to full state names\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst stateNameMapping = {\n  'AL': 'Alabama',\n  'AK': 'Alaska',\n  'AZ': 'Arizona',\n  'AR': 'Arkansas',\n  'CA': 'California',\n  'CO': 'Colorado',\n  'CT': 'Connecticut',\n  'DE': 'Delaware',\n  'FL': 'Florida',\n  'GA': 'Georgia',\n  'HI': 'Hawaii',\n  'ID': 'Idaho',\n  'IL': 'Illinois',\n  'IN': 'Indiana',\n  'IA': 'Iowa',\n  'KS': 'Kansas',\n  'KY': 'Kentucky',\n  'LA': 'Louisiana',\n  'ME': 'Maine',\n  'MD': 'Maryland',\n  'MA': 'Massachusetts',\n  'MI': 'Michigan',\n  'MN': 'Minnesota',\n  'MS': 'Mississippi',\n  'MO': 'Missouri',\n  'MT': 'Montana',\n  'NE': 'Nebraska',\n  'NV': 'Nevada',\n  'NH': 'New Hampshire',\n  'NJ': 'New Jersey',\n  'NM': 'New Mexico',\n  'NY': 'New York',\n  'NC': 'North Carolina',\n  'ND': 'North Dakota',\n  'OH': 'Ohio',\n  'OK': 'Oklahoma',\n  'OR': 'Oregon',\n  'PA': 'Pennsylvania',\n  'RI': 'Rhode Island',\n  'SC': 'South Carolina',\n  'SD': 'South Dakota',\n  'TN': 'Tennessee',\n  'TX': 'Texas',\n  'UT': 'Utah',\n  'VT': 'Vermont',\n  'VA': 'Virginia',\n  'WA': 'Washington',\n  'WV': 'West Virginia',\n  'WI': 'Wisconsin',\n  'WY': 'Wyoming'\n};\nfunction UserInput() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    selectedPlayer,\n    finePercentage,\n    fine\n  } = location.state; // Receiving fine and finePercentage\n  const [userSalary, setUserSalary] = useState('');\n  const [userState, setUserState] = useState('');\n  const [breakdown, setBreakdown] = useState(null); // To store the detailed breakdown\n  const [inputMode, setInputMode] = useState('salary'); // To switch between salary or hourly input mode\n  const [hourlyWage, setHourlyWage] = useState('');\n  const [hoursPerWeek, setHoursPerWeek] = useState('');\n  const [errors, setErrors] = useState({\n    salary: '',\n    hours: '',\n    state: ''\n  }); // Error handling\n\n  // State tax rates by state abbreviation\n  const stateTaxRates = {\n    'AL': 0.05,\n    'AK': 0,\n    'AZ': 0.0454,\n    'AR': 0.065,\n    'CA': 0.13,\n    'CO': 0.0463,\n    'CT': 0.06,\n    'DE': 0.066,\n    'FL': 0,\n    'GA': 0.0575,\n    'HI': 0.0825,\n    'ID': 0.0625,\n    'IL': 0.0495,\n    'IN': 0.0323,\n    'IA': 0.0853,\n    'KS': 0.057,\n    'KY': 0.05,\n    'LA': 0.06,\n    'ME': 0.0715,\n    'MD': 0.0575,\n    'MA': 0.05,\n    'MI': 0.0425,\n    'MN': 0.0985,\n    'MS': 0.05,\n    'MO': 0.054,\n    'MT': 0.0675,\n    'NE': 0.0684,\n    'NV': 0,\n    'NH': 0,\n    'NJ': 0.0897,\n    'NM': 0.049,\n    'NY': 0.0685,\n    'NC': 0.05499,\n    'ND': 0.029,\n    'OH': 0.04997,\n    'OK': 0.05,\n    'OR': 0.099,\n    'PA': 0.0307,\n    'RI': 0.0515,\n    'SC': 0.07,\n    'SD': 0,\n    'TN': 0,\n    'TX': 0,\n    'UT': 0.0495,\n    'VT': 0.0895,\n    'VA': 0.0575,\n    'WA': 0,\n    'WV': 0.065,\n    'WI': 0.0765,\n    'WY': 0\n  };\n  const states = Object.keys(stateTaxRates).sort();\n\n  // Helper function to format currency\n  const formatCurrency = value => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(value);\n  };\n\n  // Handler for salary input changes, allowing only numbers and periods\n  const handleSalaryChange = event => {\n    let inputValue = event.target.value;\n    inputValue = inputValue.replace(/[^0-9.]/g, ''); // Allow only digits and periods\n    setUserSalary(inputValue);\n  };\n\n  // Handler for hourly wage input\n  const handleHourlyWageChange = event => {\n    let inputValue = event.target.value;\n    inputValue = inputValue.replace(/[^0-9.]/g, '');\n    setHourlyWage(inputValue);\n  };\n\n  // Handler for hours worked per week input\n  const handleHoursPerWeekChange = event => {\n    let inputValue = event.target.value;\n    inputValue = inputValue.replace(/[^0-9]/g, ''); // Only digits for hours\n    if (parseInt(inputValue) > 168) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        hours: 'There are only 168 hours in a week. Please enter a valid number.'\n      }));\n    } else {\n      setHoursPerWeek(inputValue);\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        hours: ''\n      }));\n    }\n  };\n\n  // Handler to format salary and hourly wage inputs as currency when losing focus\n  const handleSalaryBlur = () => {\n    if (userSalary) {\n      const formattedValue = formatCurrency(parseFloat(userSalary.replace(/[^0-9.]/g, '')));\n      setUserSalary(formattedValue);\n    }\n  };\n  const handleHourlyWageBlur = () => {\n    if (hourlyWage) {\n      const formattedValue = formatCurrency(parseFloat(hourlyWage.replace(/[^0-9.]/g, '')));\n      setHourlyWage(formattedValue);\n    }\n  };\n  const calculateGrossSalary = () => {\n    if (inputMode === 'salary') {\n      return parseFloat(userSalary.replace(/[^0-9.]/g, ''));\n    } else {\n      const wage = parseFloat(hourlyWage.replace(/[^0-9.]/g, ''));\n      const hours = parseFloat(hoursPerWeek.replace(/[^0-9]/g, ''));\n      return wage * hours * 52;\n    }\n  };\n  const handleCalculate = () => {\n    const errorsFound = {};\n    if (inputMode === 'salary' && !userSalary) {\n      errorsFound.salary = 'Please enter your gross salary.';\n    }\n    if (inputMode === 'hourly' && (!hourlyWage || !hoursPerWeek)) {\n      errorsFound.salary = 'Please enter your hourly wage and hours per week.';\n    }\n    if (!userState) {\n      errorsFound.state = 'Please select your state.';\n    }\n    if (Object.keys(errorsFound).length === 0) {\n      const grossSalary = calculateGrossSalary(); // Get gross salary based on mode (salary or hourly)\n      const stateTaxRate = stateTaxRates[userState] || 0.05; // Use the state-selected tax rate or default 5%\n      const federalTax = grossSalary * 0.37; // 37% federal tax\n      const stateTax = grossSalary * stateTaxRate; // State tax\n      const netIncome = grossSalary - federalTax - stateTax; // Net income after taxes\n\n      // Correct fine calculation by removing .toFixed here and applying it later\n      const calculatedFine = netIncome * (finePercentage / 100); // Fine based on net income\n\n      // Store the fine and breakdown details\n      setBreakdown({\n        grossSalary,\n        federalTax,\n        stateTax,\n        netIncome,\n        calculatedFine\n      });\n    } else {\n      setErrors(errorsFound);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Comparable Fine Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          textAlign: \"center\",\n          gutterBottom: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Selected Player:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), \" \", selectedPlayer.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Fine Amount:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), \" \", fine]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Fine Percentage:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), \" \", finePercentage.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Choose Input Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        value: inputMode,\n        onChange: e => setInputMode(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"salary\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 22\n          }, this),\n          label: \"Gross Salary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"hourly\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 22\n          }, this),\n          label: \"Hourly Wage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), inputMode === 'salary' ? /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Enter Your Gross Salary\",\n      value: userSalary,\n      onChange: handleSalaryChange,\n      onBlur: handleSalaryBlur,\n      error: Boolean(errors.salary),\n      helperText: errors.salary,\n      type: \"text\",\n      sx: {\n        mb: 4\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Enter Your Hourly Wage\",\n        value: hourlyWage,\n        onChange: handleHourlyWageChange,\n        onBlur: handleHourlyWageBlur,\n        error: Boolean(errors.salary),\n        helperText: errors.salary,\n        type: \"text\",\n        sx: {\n          mb: 4\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Enter Hours Worked Per Week\",\n        value: hoursPerWeek,\n        onChange: handleHoursPerWeekChange,\n        error: Boolean(errors.hours),\n        helperText: errors.hours,\n        type: \"text\",\n        sx: {\n          mb: 4\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Select Your State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: userState,\n        onChange: e => setUserState(e.target.value),\n        error: Boolean(errors.state),\n        children: states.map(state => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: state,\n          children: [stateNameMapping[state], \"  \"]\n        }, state, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), errors.state && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: errors.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleCalculate,\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        onClick: () => navigate('/'),\n        sx: {\n          ml: 2\n        },\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), breakdown && /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"Your Salary Breakdown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Gross Salary:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), \" \", formatCurrency(breakdown.grossSalary)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Federal Tax (37%):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 23\n              }, this), \" \", formatCurrency(breakdown.federalTax)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"State Tax (\", (stateTaxRates[userState] * 100).toFixed(2), \"%):\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this), \" \", formatCurrency(breakdown.stateTax)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Net Income:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), \" \", formatCurrency(breakdown.netIncome)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mt: 2\n          },\n          children: \"Based on your net income, your comparable fine would be:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            mt: 2\n          },\n          children: formatCurrency(breakdown.calculatedFine.toFixed(2))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n_s(UserInput, \"C4UxtSw1matfyFxiExteKAERfYw=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = UserInput;\nexport default UserInput;\nvar _c;\n$RefreshReg$(_c, \"UserInput\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","Container","Grid","Typography","TextField","Button","Box","MenuItem","FormControl","Select","InputLabel","Card","CardContent","RadioGroup","FormControlLabel","Radio","jsxDEV","_jsxDEV","Fragment","_Fragment","stateNameMapping","UserInput","_s","location","navigate","selectedPlayer","finePercentage","fine","state","userSalary","setUserSalary","userState","setUserState","breakdown","setBreakdown","inputMode","setInputMode","hourlyWage","setHourlyWage","hoursPerWeek","setHoursPerWeek","errors","setErrors","salary","hours","stateTaxRates","states","Object","keys","sort","formatCurrency","value","Intl","NumberFormat","style","currency","format","handleSalaryChange","event","inputValue","target","replace","handleHourlyWageChange","handleHoursPerWeekChange","parseInt","prevErrors","handleSalaryBlur","formattedValue","parseFloat","handleHourlyWageBlur","calculateGrossSalary","wage","handleCalculate","errorsFound","length","grossSalary","stateTaxRate","federalTax","stateTax","netIncome","calculatedFine","maxWidth","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","textAlign","name","container","spacing","justifyContent","item","xs","toFixed","component","row","onChange","e","control","label","fullWidth","onBlur","error","Boolean","helperText","type","map","color","onClick","ml","_c","$RefreshReg$"],"sources":["C:/Projects/ProPenalty/frontend/src/components/UserInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { Container, Grid, Typography, TextField, Button, Box, MenuItem, FormControl, Select, InputLabel, Card, CardContent, RadioGroup, FormControlLabel, Radio } from '@mui/material';\r\n\r\n// Mapping state abbreviations to full state names\r\nconst stateNameMapping = {\r\n  'AL': 'Alabama', 'AK': 'Alaska', 'AZ': 'Arizona', 'AR': 'Arkansas', 'CA': 'California', 'CO': 'Colorado', 'CT': 'Connecticut', 'DE': 'Delaware', 'FL': 'Florida', 'GA': 'Georgia',\r\n  'HI': 'Hawaii', 'ID': 'Idaho', 'IL': 'Illinois', 'IN': 'Indiana', 'IA': 'Iowa', 'KS': 'Kansas', 'KY': 'Kentucky', 'LA': 'Louisiana', 'ME': 'Maine', 'MD': 'Maryland', \r\n  'MA': 'Massachusetts', 'MI': 'Michigan', 'MN': 'Minnesota', 'MS': 'Mississippi', 'MO': 'Missouri', 'MT': 'Montana', 'NE': 'Nebraska', 'NV': 'Nevada', 'NH': 'New Hampshire', \r\n  'NJ': 'New Jersey', 'NM': 'New Mexico', 'NY': 'New York', 'NC': 'North Carolina', 'ND': 'North Dakota', 'OH': 'Ohio', 'OK': 'Oklahoma', 'OR': 'Oregon', 'PA': 'Pennsylvania', \r\n  'RI': 'Rhode Island', 'SC': 'South Carolina', 'SD': 'South Dakota', 'TN': 'Tennessee', 'TX': 'Texas', 'UT': 'Utah', 'VT': 'Vermont', 'VA': 'Virginia', 'WA': 'Washington', \r\n  'WV': 'West Virginia', 'WI': 'Wisconsin', 'WY': 'Wyoming'\r\n};\r\n\r\nfunction UserInput() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { selectedPlayer, finePercentage, fine } = location.state; // Receiving fine and finePercentage\r\n  const [userSalary, setUserSalary] = useState('');\r\n  const [userState, setUserState] = useState('');\r\n  const [breakdown, setBreakdown] = useState(null); // To store the detailed breakdown\r\n  const [inputMode, setInputMode] = useState('salary'); // To switch between salary or hourly input mode\r\n  const [hourlyWage, setHourlyWage] = useState('');\r\n  const [hoursPerWeek, setHoursPerWeek] = useState('');\r\n  const [errors, setErrors] = useState({ salary: '', hours: '', state: '' }); // Error handling\r\n\r\n  // State tax rates by state abbreviation\r\n  const stateTaxRates = {\r\n    'AL': 0.05, 'AK': 0, 'AZ': 0.0454, 'AR': 0.065, 'CA': 0.13, 'CO': 0.0463, 'CT': 0.06, 'DE': 0.066, 'FL': 0, 'GA': 0.0575,\r\n    'HI': 0.0825, 'ID': 0.0625, 'IL': 0.0495, 'IN': 0.0323, 'IA': 0.0853, 'KS': 0.057, 'KY': 0.05, 'LA': 0.06, 'ME': 0.0715,\r\n    'MD': 0.0575, 'MA': 0.05, 'MI': 0.0425, 'MN': 0.0985, 'MS': 0.05, 'MO': 0.054, 'MT': 0.0675, 'NE': 0.0684, 'NV': 0, \r\n    'NH': 0, 'NJ': 0.0897, 'NM': 0.049, 'NY': 0.0685, 'NC': 0.05499, 'ND': 0.029, 'OH': 0.04997, 'OK': 0.05, 'OR': 0.099,\r\n    'PA': 0.0307, 'RI': 0.0515, 'SC': 0.07, 'SD': 0, 'TN': 0, 'TX': 0, 'UT': 0.0495, 'VT': 0.0895, 'VA': 0.0575, \r\n    'WA': 0, 'WV': 0.065, 'WI': 0.0765, 'WY': 0\r\n  };\r\n\r\n  const states = Object.keys(stateTaxRates).sort();\r\n\r\n  // Helper function to format currency\r\n  const formatCurrency = (value) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n    }).format(value);\r\n  };\r\n\r\n  // Handler for salary input changes, allowing only numbers and periods\r\n  const handleSalaryChange = (event) => {\r\n    let inputValue = event.target.value;\r\n    inputValue = inputValue.replace(/[^0-9.]/g, ''); // Allow only digits and periods\r\n    setUserSalary(inputValue);\r\n  };\r\n\r\n  // Handler for hourly wage input\r\n  const handleHourlyWageChange = (event) => {\r\n    let inputValue = event.target.value;\r\n    inputValue = inputValue.replace(/[^0-9.]/g, '');\r\n    setHourlyWage(inputValue);\r\n  };\r\n\r\n  // Handler for hours worked per week input\r\n  const handleHoursPerWeekChange = (event) => {\r\n    let inputValue = event.target.value;\r\n    inputValue = inputValue.replace(/[^0-9]/g, ''); // Only digits for hours\r\n    if (parseInt(inputValue) > 168) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        hours: 'There are only 168 hours in a week. Please enter a valid number.',\r\n      }));\r\n    } else {\r\n      setHoursPerWeek(inputValue);\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        hours: '',\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Handler to format salary and hourly wage inputs as currency when losing focus\r\n  const handleSalaryBlur = () => {\r\n    if (userSalary) {\r\n      const formattedValue = formatCurrency(parseFloat(userSalary.replace(/[^0-9.]/g, '')));\r\n      setUserSalary(formattedValue);\r\n    }\r\n  };\r\n\r\n  const handleHourlyWageBlur = () => {\r\n    if (hourlyWage) {\r\n      const formattedValue = formatCurrency(parseFloat(hourlyWage.replace(/[^0-9.]/g, '')));\r\n      setHourlyWage(formattedValue);\r\n    }\r\n  };\r\n\r\n  const calculateGrossSalary = () => {\r\n    if (inputMode === 'salary') {\r\n      return parseFloat(userSalary.replace(/[^0-9.]/g, ''));\r\n    } else {\r\n      const wage = parseFloat(hourlyWage.replace(/[^0-9.]/g, ''));\r\n      const hours = parseFloat(hoursPerWeek.replace(/[^0-9]/g, ''));\r\n      return wage * hours * 52;\r\n    }\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    const errorsFound = {};\r\n  \r\n    if (inputMode === 'salary' && !userSalary) {\r\n      errorsFound.salary = 'Please enter your gross salary.';\r\n    }\r\n    if (inputMode === 'hourly' && (!hourlyWage || !hoursPerWeek)) {\r\n      errorsFound.salary = 'Please enter your hourly wage and hours per week.';\r\n    }\r\n    if (!userState) {\r\n      errorsFound.state = 'Please select your state.';\r\n    }\r\n  \r\n    if (Object.keys(errorsFound).length === 0) {\r\n      const grossSalary = calculateGrossSalary(); // Get gross salary based on mode (salary or hourly)\r\n      const stateTaxRate = stateTaxRates[userState] || 0.05; // Use the state-selected tax rate or default 5%\r\n      const federalTax = grossSalary * 0.37; // 37% federal tax\r\n      const stateTax = grossSalary * stateTaxRate; // State tax\r\n      const netIncome = grossSalary - federalTax - stateTax; // Net income after taxes\r\n      \r\n      // Correct fine calculation by removing .toFixed here and applying it later\r\n      const calculatedFine = netIncome * (finePercentage / 100); // Fine based on net income\r\n  \r\n      // Store the fine and breakdown details\r\n      setBreakdown({\r\n        grossSalary,\r\n        federalTax,\r\n        stateTax,\r\n        netIncome,\r\n        calculatedFine,\r\n      });\r\n    } else {\r\n      setErrors(errorsFound);\r\n    }\r\n  };  \r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" sx={{ mt: 10 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Comparable Fine Calculator\r\n      </Typography>\r\n      <Card variant=\"outlined\" sx={{ mb: 4 }}>\r\n        <CardContent>\r\n          <Typography variant=\"body1\" textAlign=\"center\" gutterBottom>\r\n            <strong>Selected Player:</strong> {selectedPlayer.name}\r\n          </Typography>\r\n          <Grid container spacing={2} justifyContent=\"space-between\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\">\r\n                <strong>Fine Amount:</strong> {fine}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\">\r\n                <strong>Fine Percentage:</strong> {finePercentage.toFixed(2)}%\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Toggle between Gross Salary and Hourly Wage input modes */}\r\n      <FormControl component=\"fieldset\" sx={{ mb: 4 }}>\r\n        <Typography>Choose Input Type</Typography>\r\n        <RadioGroup\r\n          row\r\n          value={inputMode}\r\n          onChange={(e) => setInputMode(e.target.value)}\r\n        >\r\n          <FormControlLabel\r\n            value=\"salary\"\r\n            control={<Radio />}\r\n            label=\"Gross Salary\"\r\n          />\r\n          <FormControlLabel\r\n            value=\"hourly\"\r\n            control={<Radio />}\r\n            label=\"Hourly Wage\"\r\n          />\r\n        </RadioGroup>\r\n      </FormControl>\r\n\r\n      {/* Conditionally render input fields based on selected mode */}\r\n      {inputMode === 'salary' ? (\r\n        <TextField\r\n          fullWidth\r\n          label=\"Enter Your Gross Salary\"\r\n          value={userSalary}\r\n          onChange={handleSalaryChange}\r\n          onBlur={handleSalaryBlur}\r\n          error={Boolean(errors.salary)}\r\n          helperText={errors.salary}\r\n          type=\"text\"\r\n          sx={{ mb: 4 }}\r\n        />\r\n      ) : (\r\n        <>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Enter Your Hourly Wage\"\r\n            value={hourlyWage}\r\n            onChange={handleHourlyWageChange}\r\n            onBlur={handleHourlyWageBlur}\r\n            error={Boolean(errors.salary)}\r\n            helperText={errors.salary}\r\n            type=\"text\"\r\n            sx={{ mb: 4 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Enter Hours Worked Per Week\"\r\n            value={hoursPerWeek}\r\n            onChange={handleHoursPerWeekChange}\r\n            error={Boolean(errors.hours)}\r\n            helperText={errors.hours}\r\n            type=\"text\"\r\n            sx={{ mb: 4 }}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      <FormControl fullWidth sx={{ mb: 4 }}>\r\n        <InputLabel>Select Your State</InputLabel>\r\n        <Select\r\n          value={userState}\r\n          onChange={(e) => setUserState(e.target.value)}\r\n          error={Boolean(errors.state)}\r\n        >\r\n          {states.map((state) => (\r\n            <MenuItem key={state} value={state}>\r\n              {stateNameMapping[state]}  {/* Display full state names */}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n        {errors.state && (\r\n          <Typography color=\"error\">{errors.state}</Typography>\r\n        )}\r\n      </FormControl>\r\n\r\n      <Box textAlign=\"center\" sx={{ mb: 4 }}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleCalculate}>\r\n          Calculate\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          onClick={() => navigate('/')}\r\n          sx={{ ml: 2 }}\r\n        >\r\n          Home\r\n        </Button>\r\n      </Box>\r\n\r\n      {breakdown && (\r\n        <Card variant=\"outlined\" sx={{ mt: 4 }}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Your Salary Breakdown\r\n            </Typography>\r\n            <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n              <strong>Gross Salary:</strong> {formatCurrency(breakdown.grossSalary)}\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <Typography variant=\"body1\">\r\n                      <strong>Federal Tax (37%):</strong> {formatCurrency(breakdown.federalTax)}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                  <Typography variant=\"body1\">\r\n                    <strong>State Tax ({(stateTaxRates[userState] * 100).toFixed(2)}%):</strong> {formatCurrency(breakdown.stateTax)}\r\n                  </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n            <Typography variant=\"body1\">\r\n              <strong>Net Income:</strong> {formatCurrency(breakdown.netIncome)}\r\n            </Typography>\r\n            <Typography variant=\"body1\" sx={{ mt: 2 }}>\r\n              Based on your net income, your comparable fine would be:\r\n            </Typography>\r\n            <Typography variant=\"h6\" sx={{ mt: 2 }}>\r\n              {formatCurrency(breakdown.calculatedFine.toFixed(2))}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default UserInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}